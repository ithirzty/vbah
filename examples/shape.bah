/////////////////////////////////////////////////////////////
//       Shapes demo using OpenGL and GLUT in Bah.         //
//         To compile, use 'bah ./shape.bah -d'.           //
//                                                         //
//                                     © Aloïs Laurent Boë //
/////////////////////////////////////////////////////////////

#include "iostream.bah"

#include "../vbah.bah"

win window*
tex rgb

//shape defined by the user
struct userShape {
    //array containing every points of the shape
    shape: []float
    //the texture of the shape
    tex: rgb

    //used for drawing the shape
    draw() {
        drawShape(this.shape, this.tex)
    }

    //used for drawing the points
    drawPoints() {
        i=0; for i < len(this.shape) {
            drawCircle(this.shape[i], this.shape[i+1], 0.02, rgb(1.0, 0.0, 0.0))
            i = i + 2
        }
    }

}
shape userShape

display() {
    //Defines triangles point
    triangle = []float{
        -0.5, 0.0, //left point
        0.0, 0.5, //top point
        0.5, 0.0 //right point
    }
    //draws the triangle
    drawShape(triangle, tex)

    //draws the user defined shape
    shape.draw()
    //draws the every points of the shape
    shape.drawPoints()
}

init() {
    //Note: texture from: https://www.vecteezy.com/free-vector/lines
    tex = rgbTexture("./assets/tex.bmp", 1920, 1229)
    
    shape = userShape{}
    shape.tex = tex
}

//when the user clicks the window
click(btn int, pressed bool, x int, y int) {
    //if it is a click and not a click release
    if pressed == true {
        //translate the window coordinates (pixels) to object coordinates
        xf float = x
        yf float = y
        pixelsToCoords(&xf, &yf)
        //adds the coordinates to the array
        shape.shape[len(shape.shape)] = xf
        shape.shape[len(shape.shape)] = yf
    }
}

main(args []cpstring) int {
    //launching the window
    
    win = window(600, 600, "Shape")
    win.display = display
    win.init = init
    win.click = click
    win.launch()

    return 0
}